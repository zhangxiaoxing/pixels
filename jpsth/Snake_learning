#snakemake -s Snake_learning --cluster "sbatch -p stor -c 8 --parsable -o .snakemake/slurm_logs/%j.out -e .snakemake/slurm_logs/%j.err" --max-jobs-per-second  0.01 --cluster-status ./cluster_status.sh -j 100 -pr gen_all_learning_coupling --config lastfile=40
import glob
# TODDO: remove self-reference
def get_num_files():
	return len(glob.glob('binary/SC/Learning_BZ_XCORR_duo_f*.mat'))


config["lastfile"]=get_num_files()

rule gen_all_learning_coupling:
	input:
		expand("binary/SC/Learning_BZ_XCORR_duo_f{fidx}.mat",fidx=list(range(1,config["lastfile"]+1)))

rule gen_one_learning_coupling:
	input:
	output:
		"binary/SC/Learning_BZ_XCORR_duo_f{fidx,\d+}.mat"
	threads:52 
	shell:
		'matlab -noFigureWindows -batch "bz.xcorr_bz({wildcards.fidx},'"criteria='Learning'"')"'

rule gen_SC_sums_file:
	input:
	output:
		"binary/sums_conn_learning.mat"
	threads:52 
	shell:
		'matlab -noFigureWindows -batch "bz.sums_conn(poolsize={threads},criteria='"'Learning')"'"'

rule gen_chain_tag_file:
	input:
	output:
		"binary/LN_chain_tag_all_trl.mat"
	threads: 52
	shell:
		'matlab -noFigureWindows -batch "wave.chain.gen_chain_tag_file(poolsize={threads},'"criteria='Learning'"')"'

rule gen_nonmem_chain_tag_file:
	input:
	output:
		"binary/LN_chain_tag_nonmem_all_trl.mat"
	threads: 52
	shell:
		'matlab -noFigureWindows -batch "wave.chain.gen_chain_tag_file(poolsize={threads},nonmem=true,'"criteria='Learning'"')"'

rule gen_ring_tag_file:
	input:
		"binary/LN_rings_bz_vs_shuf.mat"
	output:
		"binary/LN_rings_tag_trl.mat"
	threads: 52 
	shell:
		'matlab -noFigureWindows -batch "bz.rings.rings_time_constant.stats(poolsize={threads},load_file=false,skip_save=false,odor_only=true,compress=true,shuf=false,'"criteria='Learning'"')"'

rule gen_all_shuf_chain_tag_file:
	input:
		expand("binary/shufs/LN_chain_tag_shuf{cidx}.mat",cidx=list(range(1,101)))

rule gen_one_shuf_chain_tag_file:
	input:
		"binary/LN_bz_shufs.mat"
	output:
		"binary/shufs/LN_chain_tag_shuf{cidx,\d+}.mat"
	threads: 52 
	shell:
		'matlab -noFigureWindows -batch "wave.chain.gen_chain_tag_file(poolsize={threads},shuf=true,shufidx={wildcards.cidx}'",criteria='Learning'"')"'


rule gen_all_shuf_ring_tag_file:
	input:
		expand("binary/shufs/LN_ring_tag_shuf{ridx}.mat",ridx=list(range(1,101)))

rule gen_one_shuf_ring_tag_file:
	input:
		"binary/LN_rings_bz_vs_shuf.mat",
	output:
		"binary/shufs/LN_ring_tag_shuf{ridx,\d+}.mat"
	threads: 52 
	shell:
		'matlab -noFigureWindows -batch "bz.rings.rings_time_constant.stats(poolsize={threads},odor_only=true,load_file=false,skip_save=false,compress=true,shuf=true,shufidx={wildcards.ridx}'",criteria='Learning'"')"'


rule replay_stats:
	input:
		"binary/LN_chain_tag_all_trl.mat",
		"binary/LN_rings_tag_trl.mat"
	output:
		"binary/LN_motif_replay.mat"
	shell:
		'matlab -noFigureWindows -batch "wave.replay.stats_tbl(skip_save=false,odor_only=true,'"criteria='Learning'"')"'

rule gen_all_replay_shuf_stats:
	input:
		expand("binary/shufs/LN_motif_replay_shuf{sidx}.mat",sidx=list(range(1,101)))

rule replay_shuf_stats:
	input:
		"binary/shufs/LN_chain_tag_shuf{sidx}.mat",
		"binary/shufs/LN_ring_tag_shuf{sidx}.mat"
	output:
		"binary/shufs/LN_motif_replay_shuf{sidx,\d+}.mat"
	shell:
		'matlab -noFigureWindows -batch "wave.replay.stats_tbl(skip_save=false,shuf=true,shufidx={wildcards.sidx},odor_only=true,criteria='"'Learning'"')"'



rule plot_motif_combined_freq_replay:
	input:
		"binary/LN_motif_replay.mat",
		expand("binary/shufs/LN_motif_replay_shuf{sidx}.mat",sidx=list(range(1,101)))
	output:
		"binary/LN_nested_motif_replay_spike_per_sec_w_shuf.fig",
		"binary/LN_sess_motif_spike_per_sec_w_shuf.fig"
	shell:
		'''
		matlab -noFigureWindows -batch "wave.replay.delay_vs_iti_motif_spike_per_sec(skip_save=false,shuf=true,nested=false,criteria='Learning')"
		matlab -noFigureWindows -batch "wave.replay.delay_vs_iti_motif_spike_per_sec(skip_save=false,shuf=true,nested=true,criteria='Learning')"
		'''
 
rule replay_stats_nonmem:
	input:
		"binary/LN_chain_tag_nonmem_all_trl.mat",
		"binary/LN_rings_tag_trl.mat"
	output:
		"binary/LN_motif_replay_chain_nonmem.mat",
		"binary/LN_motif_replay_ring_nonmem.mat"

	shell:
		'matlab -noFigureWindows -batch "wave.replay.stats_tbl(skip_save=false,nonmem=true,'"criteria='Learning'"')"'

rule motif_freq_mem_vs_nonmem:
        input:
                "binary/LN_motif_replay.mat",
                "binary/LN_motif_replay_chain_nonmem.mat",
                "binary/LN_motif_replay_ring_nonmem.mat"
        output:
                "binary/LN_motif_freq_chain_mem_vs_nonmem.fig",
                "binary/LN_motif_freq_loop_mem_vs_nonmem.fig"
        shell:
                '''
                matlab -noFigureWindows -batch "wave.motif_freq_mem_vs_nonmem(type='chain',criteria='Learning')"
                matlab -noFigureWindows -batch "wave.motif_freq_mem_vs_nonmem(type='loop',criteria='Learning')"
                '''

rule chain_consist_incon:
	input:
	output:
		"binary/LN_chains_consist_incon.fig",
		"binary/LN_chains_consist_incon_nonmem.fig"
	threads: 52
	shell:
		'''
		matlab -noFigureWindows -batch "wave.chain.chains_consist_incon(skip_save=false,shuf=true,poolsize={threads},criteria='Learning')"
		matlab -noFigureWindows -batch "wave.chain.chains_consist_incon(skip_save=false,shuf=true,non_mem=true,poolsize={threads},criteria='Learning')"
		'''

rule loops_occur_freq_w_shuf:
	input:
	output:
		"binary/LN_loop_occur_vs_shuf.fig"
	threads: 52
	shell:
		'matlab -noFigureWindows -batch "bz.rings.ring_wave_freq(repeats=100,denovo=true,odor_only=true,poolsize={threads},'"criteria='Learning'"')"'
		
rule fraction_memory_neuron_per_region:
	input:
	output:
		"binary/LN_memory_su_region_dist.fig"
	shell:
		'matlab -noFigureWindows -batch "learn.frac_per_region"'
		

rule sc_occur_rate_vs_wt:
	input:
		"binary/wrs_mux_meta.mat"
	output:
		"binary/ln_wt_SC_occur_rate_diff_region.fig",
		"binary/ln_wt_SC_occur_rate_same_region.fig"
	shell:
		'matlab -noFigureWindows -batch "learn.spike_coupling"'

rule ln_wt_loop_occur_freq:
	input:
	output:
		"binary/ln_wt_loop_occur_freq.fig"
	threads: 52
	shell:
		'matlab -noFigureWindows -batch "learn.ln_wt_loop_occur_freq(poolsize={threads})"'

rule ln_wt_motif_replay_mem_nonmem:
	input:
		"binary/LN_motif_replay.mat",
		"binary/LN_motif_replay_chain_nonmem.mat",
		"binary/LN_motif_replay_ring_nonmem.mat",
		"binary/motif_replay.mat",
		"binary/motif_replay_chain_nonmem.mat",
		"binary/motif_replay_ring_nonmem.mat"
	output:
		"binary/ln_wt_motif_replay_mem_nonmem.fig"
	shell:
		'matlab -noFigureWindows -batch "learn.ln_wt_motif_replay_mem_nonmem()"'




# bz.shuffle_conn_bz_alt('criteria','Learning','poolsize',2,'fn','LN_bz_shufs.mat','rpt',2)

# bz.rings.ring_list_bz_alt(poolsize=52,criteria="Learning")
# wave.chain.sschain_time_const(skip_save=true,criteria='Learning')
# wave.loop.ssloop_time_const(skip_save=true,criteria='Learning')
