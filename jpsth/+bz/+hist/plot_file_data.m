% Plots the history effect/short term plasticity/time constant between
% pairs of neuronal functional couplings. 
% Require dataset from \jpsth\+bz\+hist\hist_coeff_mem_nonmem.m
ftick=6000;
[stats,memtypes]=bz.hist.util.get_stp_stats(ftick);
binsize=ftick./30;
%level3 ->{CTXpl,STR,TH,HY}
%level5 ->{PIR,AI,ORB,ILA,etc}
% stats_all=stats;
for level=5

    fhspk_diff=bz.hist.plot_hist(stats.congru.postspk(stats.congru.maxiter(:,1)==0 & stats.congru.diff_reg,:),...
        stats.incongru.postspk(stats.incongru.maxiter(:,1)==0 & stats.incongru.diff_reg,:),...
        stats.nonmem.postspk(stats.nonmem.maxiter(:,1)==0 & stats.nonmem.diff_reg,:),...
        'title',sprintf('Cross region (%d ms bin)', binsize),...
        'binw',binsize);
    
    fhspk_same=bz.hist.plot_hist(stats.congru.postspk(stats.congru.maxiter(:,1)==0 & stats.congru.same_reg,:),...
        stats.incongru.postspk(stats.incongru.maxiter(:,1)==0 & stats.incongru.same_reg,:),...
        stats.nonmem.postspk(stats.nonmem.maxiter(:,1)==0 & stats.nonmem.same_reg,:),...
        'title',sprintf('Within region (%d ms bin)', binsize),...
        'binw',binsize);
    
%     fhfceff_diff=bz.hist.plot_hist(stats.congru.fc_eff(stats.congru.maxiter(:,2)==0 & stats.congru.diff_reg,:),...
%         stats.incongru.fc_eff(stats.incongru.maxiter(:,2)==0 & stats.incongru.same_reg,:),...
%         stats.nonmem.fc_eff(stats.nonmem.maxiter(:,2)==0 & stats.nonmem.diff_reg,:),...
%         'type','fc_eff','title',sprintf('Diff. region branch %d', level));
%     
%     fhfceff_same=bz.hist.plot_hist(stats.congru.fc_eff(stats.congru.maxiter(:,2)==0 & stats.congru.same_reg,:),...
%         stats.incongru.fc_eff(stats.incongru.maxiter(:,2)==0 & stats.incongru.same_reg,:),...
%         stats.nonmem.fc_eff(stats.nonmem.maxiter(:,2)==0 & stats.nonmem.same_reg,:),...
%         'type','fc_eff','title',sprintf('Same region branch %d', level));
%     
    exportgraphics(fhspk_diff,sprintf('SPK_diff_%dms.pdf',binsize));
    exportgraphics(fhspk_same,sprintf('SPK_same_%dms.pdf',binsize));
%     exportgraphics(fhfceff_diff,sprintf('FCEff_diff_L%d.pdf',level));
%     exportgraphics(fhfceff_same,sprintf('FCEff_same_L%d.pdf',level));
end



return

fhspk=bz.hist.plot_hist(stats.congru.postspk(stats.congru.maxiter(:,1)==0,:),...
    stats.incongru.postspk(stats.incongru.maxiter(:,1)==0,:),...
    stats.nonmem.postspk(stats.nonmem.maxiter(:,1)==0,:));

fhfceff=bz.hist.plot_hist(stats.congru.fc_eff(stats.congru.maxiter(:,2)==0,:),...
    stats.incongru.fc_eff(stats.incongru.maxiter(:,2)==0,:),...
    stats.nonmem.fc_eff(stats.nonmem.maxiter(:,2)==0,:),'type','fc_eff');

fhfcprob=bz.hist.plot_hist(stats.congru.fc_prob(stats.congru.maxiter(:,3)==0,:),...
    stats.incongru.fc_prob(stats.incongru.maxiter(:,3)==0,:),...
    stats.nonmem.fc_prob(stats.nonmem.maxiter(:,3)==0,:),'type','fc_prob');
